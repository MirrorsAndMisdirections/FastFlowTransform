name: tests-duckdb

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

# verhindert Build-Staus: cancel laufende Workflows bei neuem Push auf selben PR/Branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests-duckdb:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install package (editable) + dev deps
        run: |
          python -m pip install -U pip
          python -m pip install -e ".[dev]"

      - name: Show versions
        run: |
          python --version
          pip --version
          flowforge --version || true

      # Lint (ohne Auto-Fix im CI)
      - name: Ruff lint
        run: ruff check .

      # Typpr√ºfung (nur src; konfigurierbar via pyproject)
      - name: MyPy type-check
        run: mypy

      # Optional: Beispielprojekt einmal durchlaufen lassen (seed + run)
      - name: Example smoke (DuckDB)
        env:
          FF_ENGINE: duckdb
          FF_DUCKDB_PATH: .local/ci.duckdb
        run: |
          if [ -d "examples/simple_duckdb" ]; then
            mkdir -p examples/simple_duckdb/.local
            (cd examples/simple_duckdb && flowforge seed . --env dev && flowforge run . --env dev)
          fi

      # Tests
      - name: Pytest
        env:
          FF_ENGINE: duckdb
          FF_DUCKDB_PATH: .local/ci.duckdb
        run: |
          pytest -q
