name: simple_duckdb
version: 0.1
models_dir: models

docs:
  dag_dir: site/dag
  models:
    users.ff:
      description: "Raw users table imported from CRM."
      columns:
        id: "Primary key."
        email: "User email address."
    users_enriched:
      description: "Adds gmail flag."
      columns:
        is_gmail: "True if email ends with @gmail.com"

# variables exposed to var('key')
vars:
  day: "2000-01-01"
  min_amount: 0

tests:
  # Batch‑Tabellen
  - type: not_null
    table: users
    column: id
    tags: [batch]

  - type: unique
    table: users
    column: id
    tags: [batch]

  - type: row_count_between
    table: users_enriched
    min: 1
    tags: [batch]

  # Streaming‑Tabelle (aus streaming.py)
  - type: greater_equal
    table: fct_sessions_streaming
    column: revenue
    threshold: 0
    tags: [streaming]

  - type: greater_equal
    table: mart_orders_enriched
    column: valid_amt
    threshold: 0
    tags: [batch]

  - type: non_negative_sum
    table: mart_orders_enriched
    column: valid_amt
    tags: [batch]

  - type: non_negative_sum
    table: fct_sessions_streaming
    column: revenue
    tags: [streaming]

  - type: freshness
    table: fct_sessions_streaming
    column: session_end
    max_delay_minutes: 15
    tags: [streaming]

  # ── Cross-table reconciliations (FF-310) ─────────────────────────────────
  - type: reconcile_equal
    name: orders_count_equals_mart
    tags: [reconcile]
    left:  { table: orders,               expr: "count(*)" }
    right: { table: mart_orders_enriched, expr: "count(*)" }
    # exact equality on counts (no tolerance)

  - type: reconcile_coverage
    name: orders_fully_covered_in_mart
    tags: [reconcile]
    source: { table: orders,               key: "order_id" }
    target: { table: mart_orders_enriched, key: "order_id" }
