model: users_enriched         # logical model name (registry entry)
# engine: duckdb              # optional: overrides profiles/--engine

# Defaults â€“ deep-merged; overridden values win per case
defaults:
  inputs:
    users:                    # physical relation (relation_for('users.ff') -> "users")
      rows:
        - {id: 1, email: "a@example.com"}
        - {id: 2, email: "b@gmail.com"}
  expect:
    relation: users_enriched  # default target relation (otherwise relation_for(model))
    order_by: [id]            # sort before comparing
    any_order: false          # individual cases can set true
    ignore_columns: []        # additional comparison options below

cases:
  - name: basic                # relies entirely on defaults
    inputs: {}                 # nothing else needed here
    expect:
      rows:
        - {id: 1, email: "a@example.com", is_gmail: false}
        - {id: 2, email: "b@gmail.com",   is_gmail: true}

  - name: new_user_overrides
    inputs:
      users:
        rows:
          - {id: 3, email: "c@hotmail.com"}   # overrides defaults.inputs.users.rows
    expect:
      rows:
        - {id: 3, email: "c@hotmail.com", is_gmail: false}
